-> subclassOf(Containment, Near)
-> subclassOf(Support, Near)
-> subclassOf(RigidLinkage, Linkage)
-> subclassOf(Linkage, Near)
-> subclassOf(Contact, Near)
-> subclassOf(Near, Placement)
-> subclassOf(Exclusion, Placement)
-> subclassOf(FreedomFrom, Placement)
-> subclassOf(Far, Placement)
-> subclassOf(Exit, Access)
-> subclassOf(Entry, Access)
-> subclassOf(Exit, Departing)
-> subclassOf(Entry, Nearing)
-> subclassOf(Falling, Movement)
-> subclassOf(Nearing, Movement)
-> subclassOf(Departing, Movement)
-> subclassOf(Access, Movement)
-> subclassOf(Stillness, Movement)
-> disjoint(Container, Exclusion)
-> disjoint(Linkage, FreedomFrom)
-> disjoint(Near, Far)
-> disjoint(Support, FreedomFrom)
-> disjoint(Nearing, Departing)
-> disjoint(Nearing, Stillness)
-> disjoint(Departing, Stillness)

-> isA(cup, Crockery)
-> isA(bowl, Crockery)

-> isA(coffeeInCup, Containment)
-> hasContainer(coffeeInCup, cup)
-> hasContainee(coffeeInCup, coffee)
-> isA(cupOutOfBowl, Exclusion)
-> hasExcluder(cupOutOfBowl, bowl)
-> hasExcludee(cupOutOfBowl, cup)
-> combine(coffeeInCup, cupOutOfBowl)
-> isA(coffeeInBowl, Containment)
-> requires(coffeeInBowl, requirement_coffeeInBowl)
-> hasContainer(coffeeInBowl, bowl)
-> hasContainee(coffeeInBowl, coffee)
-> isA(coffeeNotInCup, Exclusion)
-> requires(coffeeNotInCup, requirement_coffeeNotInCup)
-> hasExcluder(coffeeNotInCup, cup)
-> hasExcludee(coffeeNotInCup, coffee)
-> combine(coffeeInBowl, coffeeNotInCup)
-> follows(coffeeInBowl, coffeeInCup)

